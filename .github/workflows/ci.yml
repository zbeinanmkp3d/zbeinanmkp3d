name: CI
on: [push, pull_request]

jobs:
  unit-tests:
    name: Unit tests
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        editor: [vim, neovim]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Checkout themis.vim
        uses: actions/checkout@v2
        with:
          repository: thinca/vim-themis
          path: vim-themis
      - name: Install Vim on macOS
        if: matrix.os == 'macos-latest' && matrix.editor == 'vim'
        run: |
          brew install macvim
          echo '::set-env name=THEMIS_VIM::vim'
      - name: Install Vim on Linux
        if: matrix.os == 'ubuntu-latest' && matrix.editor == 'vim'
        run: |
          set -x
          git clone --depth 1 --single-branch --no-tags https://github.com/vim/vim.git build/vim
          cd ./build/vim
          ./configure --prefix="$(pwd)/../../vim" --with-features=huge --enable-fail-if-missing
          make -j
          make install
          cd ../../
          echo "::set-env name=THEMIS_VIM::$(pwd)/vim/bin/vim"
      - name: Install Neovim on macOS
        if: matrix.os == 'macos-latest' && matrix.editor == 'neovim'
        run: |
          brew install neovim
          echo '::set-env name=THEMIS_VIM::nvim'
      - name: Install Neovim on Linux
        if: matrix.os == 'ubuntu-latest' && matrix.editor == 'neovim'
        run: |
          set -x
          curl -LO https://github.com/neovim/neovim/releases/download/stable/nvim-linux64.tar.gz
          tar xzf nvim-linux64.tar.gz
          mv ./nvim-linux64 ./nvim
          echo "::set-env name=THEMIS_VIM::$(pwd)/nvim/bin/nvim"
      - name: Run unit tests
        run: |
          set -x
          echo $THEMIS_VIM
          $THEMIS_VIM --version
          PROFILE_LOG=profile.txt ./vim-themis/bin/themis ./test
      - name: Install Python
        uses: actions/setup-python@v1
      - name: Report coverage
        run: |
          set -x
          pip install covimerage
          covimerage --version
          covimerage write_coverage profile.txt
          coverage report
          coverage xml
      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
